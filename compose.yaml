services:
  mariadb:
    image: mariadb
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - TZ=America/Argentina/Buenos_Aires
    volumes:
      - ./mariadb:/config
    ports:
      - 3306:3306
    restart: unless-stopped
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      - PMA_HOST=mariadb
      - PMA_ABSOLUTE_URI=https://${DOMINIO}:${PUERTO}/phpmyadmin/
    ports:
      - 8080:80
    depends_on:
      - mariadb
  clientemqtt:
    image: clientemqtt
    container_name: clientemqtt
    environment:
      - TZ=America/Argentina/Buenos_Aires 
      - SERVIDOR=${SERVIDOR} #Se reemplazar√° por la env var SERVIDOR defineda en .env
      - TOPICO=${TOPICO}
      - MARIADB_SERVER=${MARIADB_SERVER}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_USER_PASS=${MARIADB_USER_PASS}
      - MARIADB_DB=${MARIADB_DB}
      - MQTT_USR=${MQTT_USR}
      - MQTT_PASS=${MQTT_PASS}
      - PUERTO_MQTTS=${PUERTO_MQTTS}
    restart: unless-stopped
    depends_on:
      - mariadb
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    user: "1000:1000"
    ports:
      - 1883:1883
      - ${PUERTO_MQTTS}:8883
    restart: unless-stopped
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/config:/mosquitto/config
      - ./swag/etc/letsencrypt:/var/tmp
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    user: "1000"
    volumes:
      - ./grafana:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - mariadb
    environment:
      GF_SERVER_PROTOCOL: http
      GF_SERVER_ROOT_URL: https://${DOMINIO}:${PUERTO}/grafana/
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_SERVER_DOMAIN: ${DOMINIO}
      GF_ANALYTICS_REPORTING_ENABLED: "false"
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce:2.20.2
    container_name: portainer
    ports:
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Argentina/Buenos_Aires
      - URL=${DOMINIO}
      - VALIDATION=dns
      - DNSPLUGIN=duckdns
      - SUBDOMAINS=
    volumes:
      - ./swag:/config
    ports:
      - ${PUERTO}:443/tcp
      - 80:80
    restart: unless-stopped
  telegrambot:
    image: telegrambot
    container_name: telegrambot
    environment:
      - TZ=America/Argentina/Buenos_Aires 
      - TB_TOKEN=${TB_TOKEN}
      - MARIADB_SERVER=${MARIADB_SERVER}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_USER_PASS=${MARIADB_USER_PASS}
      - MARIADB_DB=${MARIADB_DB}
      - MARIADB_TABLE=${MARIADB_TABLE}
      - MIN_TEMP=${MIN_TEMP}
      - MAX_TEMP=${MAX_TEMP}
      - OPT_MIN_TEMP=${OPT_MIN_TEMP}
      - OPT_MAX_TEMP=${OPT_MAX_TEMP}
    restart: unless-stopped
    depends_on:
      - mariadb
  crud:
    image: crud
    container_name: crud
    environment:
      - MYSQL_USER=${CRUD_USER}
      - MYSQL_PASSWORD=${CRUD_PASS}
      - MYSQL_DB=${CRUD_DB}
      - MYSQL_HOST=${MARIADB_SERVER}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - mariadb
  apiiot:
    image: apiiot
    build:
      context: ./apiiot
    container_name: apiiot
    environment:
      - MARIADB_SERVER=${MARIADB_SERVER}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_USER_PASS=${MARIADB_USER_PASS}
      - MARIADB_DB=${MARIADB_DB}
      - MARIADB_TABLE=${MARIADB_TABLE}
    ports:
      - "8002:8002"
    restart: unless-stopped
    depends_on:
      - mariadb
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    ports:
      - 1880:1880
    environment:
      - MQTT_USR=${MQTT_USR}
      - MQTT_PASS=${MQTT_PASS}
      - PUERTO_MQTTS=${PUERTO_MQTTS}
      - SERVIDOR=${SERVIDOR}
      - INFLUX_SERVER=${INFLUX_SERVER}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - TELEGRAM_CHATID=${TELEGRAM_CHATID}
      - TB_TOKEN=${TB_TOKEN}
      - BASE_TOPIC=${BASE_TOPIC}
      - LED_COMMAND_TOPIC=${LED_COMMAND_TOPIC}
      - LED_RESPONSE_TOPIC=${LED_RESPONSE_TOPIC}
    volumes:
      - ./node-red:/data
    restart: unless-stopped
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - 8086:8086
    restart: unless-stopped
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Argentina/Buenos_Aires
      - SERVERURL=${DOMINIO}
      - SERVERPORT=${PUERTO}
      - PEERS=sdz   #cambiar
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.14.14.0 #optional
      - ALLOWEDIPS=0.0.0.0/0
      - PERSISTENTKEEPALIVE_PEERS=
      - LOG_CONFS=true
    volumes:
      - ./wireguard:/config
    ports:
      - ${PUERTO}:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
volumes:
  portainer_data:
